# version: "3.8"
# -->>  This 1st docker-compose file is for simple docker compose up
# services:
#   mysql:
#     image: mysql:5.7  # ✅ Specify MySQL version
#     container_name: mysql
#     environment:
#       MYSQL_DATABASE: "devops"
#       MYSQL_ROOT_PASSWORD: "root"  # ✅ Required for MySQL startup
#     ports:
#       - "3306:3306"
#     volumes:
#       - mysql-data:/var/lib/mysql
#     networks:
#       - two-tier
#     restart: always
#     healthcheck:  # ✅ Check if MySQL is healthy
#       test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
#       interval: 10s
#       timeout: 5s
#       retries: 5
#       start_period: 60s

#   flask:
#     build:
#       context: .
#     container_name: two-tier-backend
#     ports:
#       - "5000:5000"
#     environment:
#       MYSQL_HOST: mysql
#       MYSQL_USER: root
#       MYSQL_PASSWORD: root
#       MYSQL_DB: devops
#     depends_on:
#       mysql:
#         condition: service_healthy  # ✅ Ensures MySQL is healthy before starting Flask
#     networks:
#       - two-tier
#     restart: always
#     healthcheck:  # ✅ Ensure Flask exposes `/health`
#       test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
#       interval: 10s
#       timeout: 5s
#       retries: 5
#       start_period: 30s

# networks:
#   two-tier:

# volumes:
#   mysql-data:

version: "3.8"

services:
  mysql:
    user: "${UID}:${GID}" 
    image: mysql:5.7
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: devops
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    volumes:
      - ./mysql-data:/var/lib/mysql
      - ./message.sql:/docker-entrypoint-initdb.d/message.sql  
    networks:
      - twotier
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

  flask-app:
    image: trainwithshubham/two-tier-flask-app:latest
    container_name: flask-app
    ports:
      - "5000:5000"
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DB: devops
    depends_on:
      - mysql
    networks:
      - twotier
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  twotier:
